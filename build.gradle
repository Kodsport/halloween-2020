buildscript {
    repositories {
        jcenter()
    }
    repositories { jcenter() }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.4.10"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version "1.4.10"
    id 'org.jetbrains.kotlin.plugin.serialization' version "1.4.10"
}

def ktor_version = '1.4.0'
def logback_version = '1.2.3'
def serialization_version = '1.0.0-RC2'
def exposed_version = '0.25.1'


repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}

kotlin {
    targets() {
        jvm()
        configure([jvm])  {
            withJava()
            jvmJar {
                manifest {
                    attributes 'Main-Class': 'halloween2020.MainKt'
                }
                from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
            }
        }
    }
    jvm()
    js {
        browser {
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-gson:$ktor_version"
                implementation "io.ktor:ktor-auth:$ktor_version"
                implementation "io.ktor:ktor-client-apache:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
                implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
                implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
                implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version"
                implementation "org.postgresql:postgresql:42.2.2"
                implementation "com.h2database:h2:1.4.199"
                implementation files("spooky.jar")
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

jvmJar {
    dependsOn(jsBrowserProductionWebpack)
    from(new File(jsBrowserProductionWebpack.entry.name, jsBrowserProductionWebpack.outputPath))
}

task run(type: JavaExec, dependsOn: [jvmJar]) {
    group = "application"
    main = "halloween2020.MainKt"
    classpath(configurations.jvmRuntimeClasspath, jvmJar)
    jvmArgs(['--enable-preview'])
    args = []
}
